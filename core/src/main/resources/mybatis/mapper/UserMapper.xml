<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mirea.homedepot.catalogservice.core.repository.UserRepository">

    <resultMap id="UserEntity"
               type="com.mirea.homedepot.catalogservice.core.model.entity.UserEntity" autoMapping="true">
        <id property="id" column="id" jdbcType="BIGINT"/>
    </resultMap>

    <select id="findAll" resultMap="UserEntity">
        SELECT *
        FROM ctl.user
    </select>

    <select id="findById" resultMap="UserEntity">
        SELECT *
        FROM ctl.user
        WHERE id = #{id, jdbcType=BIGINT};
    </select>

    <select id="findByListId" resultMap="UserEntity">
        <bind name="" value=""/>
        SELECT *
        FROM ctl.user
        <choose>
            <when test="listId.isEmpty()">
                ORDER BY id DESC
                LIMIT 10;
            </when>
            <otherwise>
                WHERE id IN
                <foreach collection='listId' item='id' open='(' separator=',' close=')'>
                    #{id, jdbcType=BIGINT}
                </foreach>
            </otherwise>
        </choose>
    </select>
    <select id="findByLogin" resultType="com.mirea.homedepot.commonmodule.model.Entity">
        SELECT *
        FROM ctl.user
        WHERE email = #{login, jdbcType=VARCHAR};
    </select>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO ctl.user (email, password)
        VALUES (#{email}, #{password});
    </insert>

    <insert id="insertList" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO ctl.user (email, password) VALUES
        <foreach collection="entityList" item="entity" separator=",">
            (#{email}, #{password})
        </foreach>
    </insert>

    <update id="update" parameterType="com.mirea.homedepot.catalogservice.core.model.entity.UserEntity">
        UPDATE ctl.user SET
        <if test="email != null">
            email = #{email},
        </if>
        <if test="password != null">
            password = #{password},
        </if>
        WHERE id = #{id};
    </update>

    <delete id="deleteById">
        DELETE
        FROM ctl.user
        WHERE id = #{id};
    </delete>
</mapper>